// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.11.4
// source: objects.proto

package objects

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Mtype:
	//	*Msg_CacheReg
	//	*Msg_CacheReq
	//	*Msg_CacheSelect
	//	*Msg_CacheResp
	//	*Msg_CacheClean
	//	*Msg_CacheConfirmClean
	Mtype isMsg_Mtype `protobuf_oneof:"mtype"`
}

func (x *Msg) Reset() {
	*x = Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_objects_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Msg) ProtoMessage() {}

func (x *Msg) ProtoReflect() protoreflect.Message {
	mi := &file_objects_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Msg.ProtoReflect.Descriptor instead.
func (*Msg) Descriptor() ([]byte, []int) {
	return file_objects_proto_rawDescGZIP(), []int{0}
}

func (m *Msg) GetMtype() isMsg_Mtype {
	if m != nil {
		return m.Mtype
	}
	return nil
}

func (x *Msg) GetCacheReg() *CacheRegister {
	if x, ok := x.GetMtype().(*Msg_CacheReg); ok {
		return x.CacheReg
	}
	return nil
}

func (x *Msg) GetCacheReq() *CacheReq {
	if x, ok := x.GetMtype().(*Msg_CacheReq); ok {
		return x.CacheReq
	}
	return nil
}

func (x *Msg) GetCacheSelect() *CacheSelect {
	if x, ok := x.GetMtype().(*Msg_CacheSelect); ok {
		return x.CacheSelect
	}
	return nil
}

func (x *Msg) GetCacheResp() *CacheResp {
	if x, ok := x.GetMtype().(*Msg_CacheResp); ok {
		return x.CacheResp
	}
	return nil
}

func (x *Msg) GetCacheClean() *CacheClean {
	if x, ok := x.GetMtype().(*Msg_CacheClean); ok {
		return x.CacheClean
	}
	return nil
}

func (x *Msg) GetCacheConfirmClean() *CacheConfirmClean {
	if x, ok := x.GetMtype().(*Msg_CacheConfirmClean); ok {
		return x.CacheConfirmClean
	}
	return nil
}

type isMsg_Mtype interface {
	isMsg_Mtype()
}

type Msg_CacheReg struct {
	CacheReg *CacheRegister `protobuf:"bytes,1,opt,name=cache_reg,json=cacheReg,proto3,oneof"`
}

type Msg_CacheReq struct {
	CacheReq *CacheReq `protobuf:"bytes,2,opt,name=cache_req,json=cacheReq,proto3,oneof"`
}

type Msg_CacheSelect struct {
	CacheSelect *CacheSelect `protobuf:"bytes,3,opt,name=cache_select,json=cacheSelect,proto3,oneof"`
}

type Msg_CacheResp struct {
	CacheResp *CacheResp `protobuf:"bytes,4,opt,name=cache_resp,json=cacheResp,proto3,oneof"`
}

type Msg_CacheClean struct {
	CacheClean *CacheClean `protobuf:"bytes,5,opt,name=cache_clean,json=cacheClean,proto3,oneof"`
}

type Msg_CacheConfirmClean struct {
	CacheConfirmClean *CacheConfirmClean `protobuf:"bytes,6,opt,name=cache_confirm_clean,json=cacheConfirmClean,proto3,oneof"`
}

func (*Msg_CacheReg) isMsg_Mtype() {}

func (*Msg_CacheReq) isMsg_Mtype() {}

func (*Msg_CacheSelect) isMsg_Mtype() {}

func (*Msg_CacheResp) isMsg_Mtype() {}

func (*Msg_CacheClean) isMsg_Mtype() {}

func (*Msg_CacheConfirmClean) isMsg_Mtype() {}

// Sent by Bootstrap nodes to cachers to advertise themselves
type CacheRegister struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This is the last updated timestamp of the customer file present
	// clients can use this to decide which register they want to associate with
	Updated int64 `protobuf:"varint,1,opt,name=updated,proto3" json:"updated,omitempty"`
	// No. of cachers managed by this node for replication. Clients should
	// ideally select the one with less
	Cachers int32 `protobuf:"varint,2,opt,name=cachers,proto3" json:"cachers,omitempty"`
}

func (x *CacheRegister) Reset() {
	*x = CacheRegister{}
	if protoimpl.UnsafeEnabled {
		mi := &file_objects_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CacheRegister) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheRegister) ProtoMessage() {}

func (x *CacheRegister) ProtoReflect() protoreflect.Message {
	mi := &file_objects_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheRegister.ProtoReflect.Descriptor instead.
func (*CacheRegister) Descriptor() ([]byte, []int) {
	return file_objects_proto_rawDescGZIP(), []int{1}
}

func (x *CacheRegister) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

func (x *CacheRegister) GetCachers() int32 {
	if x != nil {
		return x.Cachers
	}
	return 0
}

// Sent by Cacher nodes periodically
type CacheReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Current available storage
	SizeAvailable float32 `protobuf:"fixed32,1,opt,name=size_available,json=sizeAvailable,proto3" json:"size_available,omitempty"`
	// Cached files
	AlreadyCached int32 `protobuf:"varint,2,opt,name=already_cached,json=alreadyCached,proto3" json:"already_cached,omitempty"`
	// Last successful cache
	LastCached int64 `protobuf:"varint,3,opt,name=last_cached,json=lastCached,proto3" json:"last_cached,omitempty"`
	// Uptime % of the node
	Uptime int32 `protobuf:"varint,4,opt,name=uptime,proto3" json:"uptime,omitempty"`
	// Current session time, will tell us how long he is active
	SessionTime int32 `protobuf:"varint,5,opt,name=session_time,json=sessionTime,proto3" json:"session_time,omitempty"`
	// Zone based on location
	Zone string `protobuf:"bytes,6,opt,name=zone,proto3" json:"zone,omitempty"`
	// No. of cachers connected
	ChConnected int32 `protobuf:"varint,7,opt,name=ch_connected,json=chConnected,proto3" json:"ch_connected,omitempty"`
	// No. of light clients connected
	LcConnected int32 `protobuf:"varint,8,opt,name=lc_connected,json=lcConnected,proto3" json:"lc_connected,omitempty"`
	// Balance of the node
	Balance float32 `protobuf:"fixed32,9,opt,name=balance,proto3" json:"balance,omitempty"`
	// Is it port forwarded
	PortForwarded bool `protobuf:"varint,10,opt,name=port_forwarded,json=portForwarded,proto3" json:"port_forwarded,omitempty"`
	// Master servers this request is for
	Masters []string `protobuf:"bytes,11,rep,name=masters,proto3" json:"masters,omitempty"`
}

func (x *CacheReq) Reset() {
	*x = CacheReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_objects_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CacheReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheReq) ProtoMessage() {}

func (x *CacheReq) ProtoReflect() protoreflect.Message {
	mi := &file_objects_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheReq.ProtoReflect.Descriptor instead.
func (*CacheReq) Descriptor() ([]byte, []int) {
	return file_objects_proto_rawDescGZIP(), []int{2}
}

func (x *CacheReq) GetSizeAvailable() float32 {
	if x != nil {
		return x.SizeAvailable
	}
	return 0
}

func (x *CacheReq) GetAlreadyCached() int32 {
	if x != nil {
		return x.AlreadyCached
	}
	return 0
}

func (x *CacheReq) GetLastCached() int64 {
	if x != nil {
		return x.LastCached
	}
	return 0
}

func (x *CacheReq) GetUptime() int32 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

func (x *CacheReq) GetSessionTime() int32 {
	if x != nil {
		return x.SessionTime
	}
	return 0
}

func (x *CacheReq) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *CacheReq) GetChConnected() int32 {
	if x != nil {
		return x.ChConnected
	}
	return 0
}

func (x *CacheReq) GetLcConnected() int32 {
	if x != nil {
		return x.LcConnected
	}
	return 0
}

func (x *CacheReq) GetBalance() float32 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *CacheReq) GetPortForwarded() bool {
	if x != nil {
		return x.PortForwarded
	}
	return false
}

func (x *CacheReq) GetMasters() []string {
	if x != nil {
		return x.Masters
	}
	return nil
}

// Sent by manager when cachers are selected for particular files
type CacheSelect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Selected file
	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	// Key of the file
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// Cachers selected for this file
	Cachers []string `protobuf:"bytes,3,rep,name=cachers,proto3" json:"cachers,omitempty"`
	// Sources contain the list of nodes that can be used to obtain the file
	Sources []string `protobuf:"bytes,4,rep,name=sources,proto3" json:"sources,omitempty"`
}

func (x *CacheSelect) Reset() {
	*x = CacheSelect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_objects_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CacheSelect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheSelect) ProtoMessage() {}

func (x *CacheSelect) ProtoReflect() protoreflect.Message {
	mi := &file_objects_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheSelect.ProtoReflect.Descriptor instead.
func (*CacheSelect) Descriptor() ([]byte, []int) {
	return file_objects_proto_rawDescGZIP(), []int{3}
}

func (x *CacheSelect) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *CacheSelect) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CacheSelect) GetCachers() []string {
	if x != nil {
		return x.Cachers
	}
	return nil
}

func (x *CacheSelect) GetSources() []string {
	if x != nil {
		return x.Sources
	}
	return nil
}

// Sent by manager when cachers are selected for particular files
type CacheClean struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Selected file
	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	// Key of the file
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// Cachers selected for this file
	Cachers []string `protobuf:"bytes,3,rep,name=cachers,proto3" json:"cachers,omitempty"`
}

func (x *CacheClean) Reset() {
	*x = CacheClean{}
	if protoimpl.UnsafeEnabled {
		mi := &file_objects_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CacheClean) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheClean) ProtoMessage() {}

func (x *CacheClean) ProtoReflect() protoreflect.Message {
	mi := &file_objects_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheClean.ProtoReflect.Descriptor instead.
func (*CacheClean) Descriptor() ([]byte, []int) {
	return file_objects_proto_rawDescGZIP(), []int{4}
}

func (x *CacheClean) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *CacheClean) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CacheClean) GetCachers() []string {
	if x != nil {
		return x.Cachers
	}
	return nil
}

// Sent by cacher after download is complete
type CacheResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Hash of file
	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	// Key of the file
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// Size of file
	Size int32 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	// Master server this request is for. Only one person should process this
	Master string `protobuf:"bytes,4,opt,name=master,proto3" json:"master,omitempty"`
}

func (x *CacheResp) Reset() {
	*x = CacheResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_objects_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CacheResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheResp) ProtoMessage() {}

func (x *CacheResp) ProtoReflect() protoreflect.Message {
	mi := &file_objects_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheResp.ProtoReflect.Descriptor instead.
func (*CacheResp) Descriptor() ([]byte, []int) {
	return file_objects_proto_rawDescGZIP(), []int{5}
}

func (x *CacheResp) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *CacheResp) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CacheResp) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *CacheResp) GetMaster() string {
	if x != nil {
		return x.Master
	}
	return ""
}

// Sent by cacher after cleanup
type CacheConfirmClean struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Hash of file
	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	// Key of the file
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// Master server this request is for. Only one person should process this
	Master string `protobuf:"bytes,3,opt,name=master,proto3" json:"master,omitempty"`
}

func (x *CacheConfirmClean) Reset() {
	*x = CacheConfirmClean{}
	if protoimpl.UnsafeEnabled {
		mi := &file_objects_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CacheConfirmClean) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheConfirmClean) ProtoMessage() {}

func (x *CacheConfirmClean) ProtoReflect() protoreflect.Message {
	mi := &file_objects_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheConfirmClean.ProtoReflect.Descriptor instead.
func (*CacheConfirmClean) Descriptor() ([]byte, []int) {
	return file_objects_proto_rawDescGZIP(), []int{6}
}

func (x *CacheConfirmClean) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *CacheConfirmClean) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CacheConfirmClean) GetMaster() string {
	if x != nil {
		return x.Master
	}
	return ""
}

// Shared DB object
type FileObj struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Hash       string       `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Size       int64        `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Link       string       `protobuf:"bytes,4,opt,name=link,proto3" json:"link,omitempty"`
	ProjectId  string       `protobuf:"bytes,5,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	CustomerId string       `protobuf:"bytes,6,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	Expiry     int32        `protobuf:"varint,7,opt,name=expiry,proto3" json:"expiry,omitempty"`
	Stats      *FileStats   `protobuf:"bytes,8,opt,name=stats,proto3" json:"stats,omitempty"`
	RouteInfo  *RoutingInfo `protobuf:"bytes,9,opt,name=route_info,json=routeInfo,proto3" json:"route_info,omitempty"`
	Status     *ReplStatus  `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	Active     bool         `protobuf:"varint,11,opt,name=active,proto3" json:"active,omitempty"`
	Created    int64        `protobuf:"varint,98,opt,name=created,proto3" json:"created,omitempty"`
	Updated    int64        `protobuf:"varint,99,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *FileObj) Reset() {
	*x = FileObj{}
	if protoimpl.UnsafeEnabled {
		mi := &file_objects_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileObj) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileObj) ProtoMessage() {}

func (x *FileObj) ProtoReflect() protoreflect.Message {
	mi := &file_objects_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileObj.ProtoReflect.Descriptor instead.
func (*FileObj) Descriptor() ([]byte, []int) {
	return file_objects_proto_rawDescGZIP(), []int{7}
}

func (x *FileObj) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileObj) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *FileObj) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileObj) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *FileObj) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *FileObj) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *FileObj) GetExpiry() int32 {
	if x != nil {
		return x.Expiry
	}
	return 0
}

func (x *FileObj) GetStats() *FileStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *FileObj) GetRouteInfo() *RoutingInfo {
	if x != nil {
		return x.RouteInfo
	}
	return nil
}

func (x *FileObj) GetStatus() *ReplStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *FileObj) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *FileObj) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *FileObj) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

type FileStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests     int32   `protobuf:"varint,1,opt,name=requests,proto3" json:"requests,omitempty"`
	Completed    int32   `protobuf:"varint,2,opt,name=completed,proto3" json:"completed,omitempty"`
	AvgSpeed     float32 `protobuf:"fixed32,3,opt,name=avg_speed,json=avgSpeed,proto3" json:"avg_speed,omitempty"`
	LastDownload int64   `protobuf:"varint,4,opt,name=last_download,json=lastDownload,proto3" json:"last_download,omitempty"`
}

func (x *FileStats) Reset() {
	*x = FileStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_objects_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileStats) ProtoMessage() {}

func (x *FileStats) ProtoReflect() protoreflect.Message {
	mi := &file_objects_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileStats.ProtoReflect.Descriptor instead.
func (*FileStats) Descriptor() ([]byte, []int) {
	return file_objects_proto_rawDescGZIP(), []int{8}
}

func (x *FileStats) GetRequests() int32 {
	if x != nil {
		return x.Requests
	}
	return 0
}

func (x *FileStats) GetCompleted() int32 {
	if x != nil {
		return x.Completed
	}
	return 0
}

func (x *FileStats) GetAvgSpeed() float32 {
	if x != nil {
		return x.AvgSpeed
	}
	return 0
}

func (x *FileStats) GetLastDownload() int64 {
	if x != nil {
		return x.LastDownload
	}
	return 0
}

type RoutingInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Confirmed      [][]byte `protobuf:"bytes,1,rep,name=confirmed,proto3" json:"confirmed,omitempty"`
	Discovered     [][]byte `protobuf:"bytes,2,rep,name=discovered,proto3" json:"discovered,omitempty"`
	PrimaryOwner   string   `protobuf:"bytes,3,opt,name=primary_owner,json=primaryOwner,proto3" json:"primary_owner,omitempty"`
	SecondaryOwner string   `protobuf:"bytes,4,opt,name=secondary_owner,json=secondaryOwner,proto3" json:"secondary_owner,omitempty"`
}

func (x *RoutingInfo) Reset() {
	*x = RoutingInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_objects_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoutingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutingInfo) ProtoMessage() {}

func (x *RoutingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_objects_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutingInfo.ProtoReflect.Descriptor instead.
func (*RoutingInfo) Descriptor() ([]byte, []int) {
	return file_objects_proto_rawDescGZIP(), []int{9}
}

func (x *RoutingInfo) GetConfirmed() [][]byte {
	if x != nil {
		return x.Confirmed
	}
	return nil
}

func (x *RoutingInfo) GetDiscovered() [][]byte {
	if x != nil {
		return x.Discovered
	}
	return nil
}

func (x *RoutingInfo) GetPrimaryOwner() string {
	if x != nil {
		return x.PrimaryOwner
	}
	return ""
}

func (x *RoutingInfo) GetSecondaryOwner() string {
	if x != nil {
		return x.SecondaryOwner
	}
	return ""
}

type ReplStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastReviewed     int64 `protobuf:"varint,1,opt,name=last_reviewed,json=lastReviewed,proto3" json:"last_reviewed,omitempty"`
	LastUpdated      int64 `protobuf:"varint,2,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	ForceReplication bool  `protobuf:"varint,3,opt,name=force_replication,json=forceReplication,proto3" json:"force_replication,omitempty"`
	CopiesInProgress int32 `protobuf:"varint,4,opt,name=copies_in_progress,json=copiesInProgress,proto3" json:"copies_in_progress,omitempty"`
}

func (x *ReplStatus) Reset() {
	*x = ReplStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_objects_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplStatus) ProtoMessage() {}

func (x *ReplStatus) ProtoReflect() protoreflect.Message {
	mi := &file_objects_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplStatus.ProtoReflect.Descriptor instead.
func (*ReplStatus) Descriptor() ([]byte, []int) {
	return file_objects_proto_rawDescGZIP(), []int{10}
}

func (x *ReplStatus) GetLastReviewed() int64 {
	if x != nil {
		return x.LastReviewed
	}
	return 0
}

func (x *ReplStatus) GetLastUpdated() int64 {
	if x != nil {
		return x.LastUpdated
	}
	return 0
}

func (x *ReplStatus) GetForceReplication() bool {
	if x != nil {
		return x.ForceReplication
	}
	return false
}

func (x *ReplStatus) GetCopiesInProgress() int32 {
	if x != nil {
		return x.CopiesInProgress
	}
	return 0
}

var File_objects_proto protoreflect.FileDescriptor

var file_objects_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0xed, 0x02, 0x0a, 0x03, 0x4d, 0x73, 0x67,
	0x12, 0x35, 0x0a, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x08, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x67, 0x12, 0x30, 0x0a, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x5f, 0x72, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52,
	0x08, 0x63, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x12, 0x39, 0x0a, 0x0c, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x61, 0x63, 0x68, 0x65, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x12, 0x33, 0x0a, 0x0a, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x09,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0b, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x5f, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x43, 0x6c,
	0x65, 0x61, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x61, 0x63, 0x68, 0x65, 0x43, 0x6c, 0x65, 0x61,
	0x6e, 0x12, 0x4c, 0x0a, 0x13, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x5f, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x48, 0x00, 0x52, 0x11, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x42,
	0x07, 0x0a, 0x05, 0x6d, 0x74, 0x79, 0x70, 0x65, 0x22, 0x43, 0x0a, 0x0d, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x22, 0xe9, 0x02,
	0x0a, 0x08, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x69,
	0x7a, 0x65, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0d, 0x73, 0x69, 0x7a, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x6c, 0x72, 0x65, 0x61,
	0x64, 0x79, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c,
	0x61, 0x73, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x5f, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x63, 0x68, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6c,
	0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x6c, 0x63, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x73, 0x22, 0x67, 0x0a, 0x0b, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x22, 0x4c, 0x0a, 0x0a, 0x43, 0x61, 0x63, 0x68, 0x65, 0x43, 0x6c, 0x65, 0x61, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x63, 0x68, 0x65, 0x72,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73,
	0x22, 0x5d, 0x0a, 0x09, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x22,
	0x51, 0x0a, 0x11, 0x43, 0x61, 0x63, 0x68, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x43,
	0x6c, 0x65, 0x61, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x22, 0x89, 0x03, 0x0a, 0x07, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69,
	0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x12, 0x33, 0x0a, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x52,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e,
	0x52, 0x65, 0x70, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x62, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x63, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x87,
	0x01, 0x0a, 0x09, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76, 0x67, 0x5f, 0x73, 0x70,
	0x65, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x61, 0x76, 0x67, 0x53, 0x70,
	0x65, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x99, 0x01, 0x0a, 0x0b, 0x52, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x65, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x65, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x22, 0xaf, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x70, 0x69,
	0x65, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x63, 0x6f, 0x70, 0x69, 0x65, 0x73, 0x49, 0x6e, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_objects_proto_rawDescOnce sync.Once
	file_objects_proto_rawDescData = file_objects_proto_rawDesc
)

func file_objects_proto_rawDescGZIP() []byte {
	file_objects_proto_rawDescOnce.Do(func() {
		file_objects_proto_rawDescData = protoimpl.X.CompressGZIP(file_objects_proto_rawDescData)
	})
	return file_objects_proto_rawDescData
}

var file_objects_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_objects_proto_goTypes = []interface{}{
	(*Msg)(nil),               // 0: objects.Msg
	(*CacheRegister)(nil),     // 1: objects.CacheRegister
	(*CacheReq)(nil),          // 2: objects.CacheReq
	(*CacheSelect)(nil),       // 3: objects.CacheSelect
	(*CacheClean)(nil),        // 4: objects.CacheClean
	(*CacheResp)(nil),         // 5: objects.CacheResp
	(*CacheConfirmClean)(nil), // 6: objects.CacheConfirmClean
	(*FileObj)(nil),           // 7: objects.FileObj
	(*FileStats)(nil),         // 8: objects.FileStats
	(*RoutingInfo)(nil),       // 9: objects.RoutingInfo
	(*ReplStatus)(nil),        // 10: objects.ReplStatus
}
var file_objects_proto_depIdxs = []int32{
	1,  // 0: objects.Msg.cache_reg:type_name -> objects.CacheRegister
	2,  // 1: objects.Msg.cache_req:type_name -> objects.CacheReq
	3,  // 2: objects.Msg.cache_select:type_name -> objects.CacheSelect
	5,  // 3: objects.Msg.cache_resp:type_name -> objects.CacheResp
	4,  // 4: objects.Msg.cache_clean:type_name -> objects.CacheClean
	6,  // 5: objects.Msg.cache_confirm_clean:type_name -> objects.CacheConfirmClean
	8,  // 6: objects.FileObj.stats:type_name -> objects.FileStats
	9,  // 7: objects.FileObj.route_info:type_name -> objects.RoutingInfo
	10, // 8: objects.FileObj.status:type_name -> objects.ReplStatus
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_objects_proto_init() }
func file_objects_proto_init() {
	if File_objects_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_objects_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_objects_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CacheRegister); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_objects_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CacheReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_objects_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CacheSelect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_objects_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CacheClean); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_objects_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CacheResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_objects_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CacheConfirmClean); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_objects_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileObj); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_objects_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_objects_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoutingInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_objects_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_objects_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Msg_CacheReg)(nil),
		(*Msg_CacheReq)(nil),
		(*Msg_CacheSelect)(nil),
		(*Msg_CacheResp)(nil),
		(*Msg_CacheClean)(nil),
		(*Msg_CacheConfirmClean)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_objects_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_objects_proto_goTypes,
		DependencyIndexes: file_objects_proto_depIdxs,
		MessageInfos:      file_objects_proto_msgTypes,
	}.Build()
	File_objects_proto = out.File
	file_objects_proto_rawDesc = nil
	file_objects_proto_goTypes = nil
	file_objects_proto_depIdxs = nil
}